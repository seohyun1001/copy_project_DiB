<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.project_dib.mapper.RestaurantReplyMapper">

    <!-- 리뷰 삽입 -->
    <insert id="insertReview" useGeneratedKeys="true" keyProperty="review_no">
        INSERT INTO restaurant_review (review_text, mid, review_like, rno, moddate, regdate)
        VALUES (#{review_text}, #{mid}, #{review_like}, #{rno}, NOW(), NOW())
    </insert>

    <!-- 리뷰 수정 -->
    <update id="updateReview">
        UPDATE restaurant_review
        SET review_text = #{review_text}, review_like = #{review_like}, moddate = NOW()
        WHERE review_no = #{review_no}
    </update>

    <!-- 리뷰 삭제 -->
    <delete id="deleteReview">
        DELETE FROM restaurant_review
        WHERE review_no = #{review_no}
    </delete>

    <!-- 특정 레스토랑의 리뷰 목록 조회 -->
    <select id="listOfRestaurant" resultType="org.zerock.project_dib.restaurant.domain.RestaurantReply">
        SELECT *
        FROM restaurant_review
        WHERE rno = #{rno}
        ORDER BY review_no DESC
            LIMIT #{pageRequestDTO.offset}, #{pageRequestDTO.size}
    </select>

    <!-- 특정 리뷰 조회 -->
    <select id="readReview" resultType="org.zerock.project_dib.restaurant.domain.RestaurantReply">
        SELECT *
        FROM restaurant_review
        WHERE review_no = #{review_no}
    </select>

    <!-- 특정 레스토랑의 전체 리뷰 개수 조회 -->
    <select id="countTotalReviews" resultType="int">
        SELECT COUNT(*)
        FROM restaurant_review
        WHERE rno = #{rno}
    </select>
</mapper>
